{{- range $chain, $value := .Values.chains }}
{{ $data := dict "chain" $chain "port" ($.Values.exposer.port | quote | default "8081") }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $chain }}-genesis
spec:
  serviceName: {{ $chain }}-genesis
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $chain }}
      app.kubernetes.io/name: {{ $chain }}-genesis
  template:
    metadata:
      annotations:
        quality: release
        role: api-gateway
        sla: high
        tier: gateway
      labels:
        app.kubernetes.io/instance: {{ $chain }}
        app.kubernetes.io/type: {{ $chain }}
        app.kubernetes.io/name: {{ $chain }}-genesis
        app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    spec:
      initContainers:
        - name: init-genesis
          image: {{ $value.image }}
          imagePullPolicy: Always
          env:
            {{- include "devnet.evnVars" $value | indent 12 }}
            {{- include "devnet.timeoutVars" $.Values | indent 12 }}
            - name: KEYS_CONFIG
              value: /configs/keys.json
          command:
            - bash
            - "-c"
            - |
              VAL_INDEX=${HOSTNAME##*-}
              echo "Validator Index: $VAL_INDEX"

              echo "Running setup and config files..."
              bash -e /scripts/setup_genesis.sh
              bash -e /scripts/setup_config.sh
          resources:
            limits:
              cpu: "0.2"
              memory: "200M"
            requests:
              cpu: "0.1"
              memory: "100M"
          volumeMounts:
            - mountPath: {{ $value.home }}
              name: node
            - mountPath: /configs
              name: addresses
            - mountPath: /scripts
              name: scripts
      containers:
        - name: validator
          image: {{ $value.image }}
          imagePullPolicy: Always
          env:
            - name: CHAIN_BIN
              value: {{ $value.binary }}
          command:
            - bash
            - "-c"
            - |
              $CHAIN_BIN start
          resources:
            limits:
              cpu: "1"
              memory: "1G"
            requests:
              cpu: "0.5"
              memory: "500M"
          volumeMounts:
            - mountPath: {{ $value.home }}
              name: node
            - mountPath: /configs
              name: addresses
        - name: exposer
          image: {{ $.Values.exposer.image }}
          imagePullPolicy: Always
          env:
            {{- include "devnet.genesisVars" $data | indent 12}}
            - name: GENESIS_FILE
              value: {{ $value.home }}/config/genesis.json
          command: [ "exposer" ]
          resources:
            limits:
              cpu: "0.1"
              memory: "100M"
            requests:
              cpu: "0.1"
              memory: "100M"
          volumeMounts:
            - mountPath: {{ $value.home }}
              name: node
      volumes:
        - name: node
          emptyDir: { }
        - name: addresses
          configMap:
            name: keys
        - name: scripts
          configMap:
            name: setup-scripts
---
{{- end }}